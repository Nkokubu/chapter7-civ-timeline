"""add civ centroid lat/lon

Revision ID: 24b67d692f65
Revises: 25c46e35a004
Create Date: 2025-08-28 06:47:48.670090

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '24b67d692f65'
down_revision: Union[str, Sequence[str], None] = '25c46e35a004'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_name'))

    op.drop_table('tag')
    op.drop_table('eventtag')
    with op.batch_alter_table('civilization', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_civilization_end_year'))
        batch_op.drop_index(batch_op.f('ix_civilization_name'))
        batch_op.drop_index(batch_op.f('ix_civilization_region'))
        batch_op.drop_index(batch_op.f('ix_civilization_start_year'))

    op.drop_table('civilization')
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_event_civilization_id'))
        batch_op.drop_index(batch_op.f('ix_event_title'))
        batch_op.drop_index(batch_op.f('ix_event_year'))

    op.drop_table('event')
    with op.batch_alter_table('civilizations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('latitude', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('longitude', sa.Float(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('civilizations', schema=None) as batch_op:
        batch_op.drop_column('longitude')
        batch_op.drop_column('latitude')

    op.create_table('event',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('civilization_id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('year', sa.INTEGER(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('kind', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['civilization_id'], ['civilization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_event_year'), ['year'], unique=False)
        batch_op.create_index(batch_op.f('ix_event_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_event_civilization_id'), ['civilization_id'], unique=False)

    op.create_table('civilization',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('region', sa.VARCHAR(), nullable=False),
    sa.Column('start_year', sa.INTEGER(), nullable=False),
    sa.Column('end_year', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('civilization', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_civilization_start_year'), ['start_year'], unique=False)
        batch_op.create_index(batch_op.f('ix_civilization_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_civilization_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_civilization_end_year'), ['end_year'], unique=False)

    op.create_table('eventtag',
    sa.Column('event_id', sa.INTEGER(), nullable=False),
    sa.Column('tag_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'tag_id')
    )
    op.create_table('tag',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_name'), ['name'], unique=1)

    # ### end Alembic commands ###
