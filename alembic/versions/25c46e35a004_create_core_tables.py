"""create core tables

Revision ID: 25c46e35a004
Revises: 
Create Date: 2025-08-23 10:14:04.374630

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa
import sqlmodel   # ← add this line

# revision identifiers, used by Alembic.
revision: str = '25c46e35a004'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('civilization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('region', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_civilization_end_year'), 'civilization', ['end_year'], unique=False)
    op.create_index(op.f('ix_civilization_name'), 'civilization', ['name'], unique=False)
    op.create_index(op.f('ix_civilization_region'), 'civilization', ['region'], unique=False)
    op.create_index(op.f('ix_civilization_start_year'), 'civilization', ['start_year'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_name'), 'tag', ['name'], unique=True)
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('civilization_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('kind', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['civilization_id'], ['civilization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_civilization_id'), 'event', ['civilization_id'], unique=False)
    op.create_index(op.f('ix_event_title'), 'event', ['title'], unique=False)
    op.create_index(op.f('ix_event_year'), 'event', ['year'], unique=False)
    op.create_table('eventtag',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('eventtag')
    op.drop_index(op.f('ix_event_year'), table_name='event')
    op.drop_index(op.f('ix_event_title'), table_name='event')
    op.drop_index(op.f('ix_event_civilization_id'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_tag_name'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_civilization_start_year'), table_name='civilization')
    op.drop_index(op.f('ix_civilization_region'), table_name='civilization')
    op.drop_index(op.f('ix_civilization_name'), table_name='civilization')
    op.drop_index(op.f('ix_civilization_end_year'), table_name='civilization')
    op.drop_table('civilization')
    # ### end Alembic commands ###
